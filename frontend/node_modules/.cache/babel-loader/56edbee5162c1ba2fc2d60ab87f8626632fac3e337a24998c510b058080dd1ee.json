{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ImageViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageViewer({\n  image,\n  onClose,\n  onSave\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [context, setContext] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startX, setStartX] = useState(0);\n  const [startY, setStartY] = useState(0);\n  const [endX, setEndX] = useState(0);\n  const [endY, setEndY] = useState(0);\n  const [shapes, setShapes] = useState([]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    setContext(ctx);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    if (image) {\n      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n    }\n  }, [image]);\n  const handleMouseDown = e => {\n    setIsDrawing(true);\n    setStartX(e.nativeEvent.offsetX);\n    setStartY(e.nativeEvent.offsetY);\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing) return;\n    setEndX(e.nativeEvent.offsetX);\n    setEndY(e.nativeEvent.offsetY);\n  };\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n    // Save the drawn shape\n    setShapes([...shapes, {\n      startX,\n      startY,\n      endX,\n      endY\n    }]);\n  };\n  const drawShapes = () => {\n    if (!context) return;\n    context.strokeStyle = 'red';\n    context.lineWidth = 2;\n    shapes.forEach(({\n      startX,\n      startY,\n      endX,\n      endY\n    }) => {\n      const width = endX - startX;\n      const height = endY - startY;\n      context.strokeRect(startX, startY, width, height);\n    });\n  };\n  useEffect(() => {\n    drawShapes();\n  }, [shapes]);\n  const handleSave = () => {\n    onSave(canvasRef.current.toDataURL());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"image-canvas\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-viewer-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageViewer, \"1pcOhLVFh1VOwYu8ZqzYXpEsw5w=\");\n_c = ImageViewer;\nexport default ImageViewer;\nvar _c;\n$RefreshReg$(_c, \"ImageViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","ImageViewer","image","onClose","onSave","_s","canvasRef","context","setContext","isDrawing","setIsDrawing","startX","setStartX","startY","setStartY","endX","setEndX","endY","setEndY","shapes","setShapes","canvas","current","ctx","getContext","clearRect","width","height","drawImage","handleMouseDown","e","nativeEvent","offsetX","offsetY","handleMouseMove","handleMouseUp","drawShapes","strokeStyle","lineWidth","forEach","strokeRect","handleSave","toDataURL","className","children","ref","onMouseDown","onMouseMove","onMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './ImageViewer.css';\n\nfunction ImageViewer({ image, onClose, onSave }) {\n    const canvasRef = useRef(null);\n    const [context, setContext] = useState(null);\n    const [isDrawing, setIsDrawing] = useState(false);\n    const [startX, setStartX] = useState(0);\n    const [startY, setStartY] = useState(0);\n    const [endX, setEndX] = useState(0);\n    const [endY, setEndY] = useState(0);\n    const [shapes, setShapes] = useState([]);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        setContext(ctx);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        if (image) {\n            ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n        }\n    }, [image]);\n\n    const handleMouseDown = (e) => {\n        setIsDrawing(true);\n        setStartX(e.nativeEvent.offsetX);\n        setStartY(e.nativeEvent.offsetY);\n    };\n\n    const handleMouseMove = (e) => {\n        if (!isDrawing) return;\n        setEndX(e.nativeEvent.offsetX);\n        setEndY(e.nativeEvent.offsetY);\n    };\n\n    const handleMouseUp = () => {\n        setIsDrawing(false);\n        // Save the drawn shape\n        setShapes([...shapes, { startX, startY, endX, endY }]);\n    };\n\n    const drawShapes = () => {\n        if (!context) return;\n        context.strokeStyle = 'red';\n        context.lineWidth = 2;\n        shapes.forEach(({ startX, startY, endX, endY }) => {\n            const width = endX - startX;\n            const height = endY - startY;\n            context.strokeRect(startX, startY, width, height);\n        });\n    };\n\n    useEffect(() => {\n        drawShapes();\n    }, [shapes]);\n\n    const handleSave = () => {\n        onSave(canvasRef.current.toDataURL());\n    };\n\n    return (\n        <div className=\"image-viewer-container\">\n            <canvas\n                ref={canvasRef}\n                className=\"image-canvas\"\n                onMouseDown={handleMouseDown}\n                onMouseMove={handleMouseMove}\n                onMouseUp={handleMouseUp}\n            />\n            <div className=\"image-viewer-buttons\">\n                <button onClick={onClose}>Close</button>\n                <button onClick={handleSave}>Save</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ImageViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAMC,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMwB,MAAM,GAAGf,SAAS,CAACgB,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnChB,UAAU,CAACe,GAAG,CAAC;IACfA,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACM,MAAM,CAAC;IAChD,IAAIzB,KAAK,EAAE;MACPqB,GAAG,CAACK,SAAS,CAAC1B,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEmB,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACM,MAAM,CAAC;IAC3D;EACJ,CAAC,EAAE,CAACzB,KAAK,CAAC,CAAC;EAEX,MAAM2B,eAAe,GAAIC,CAAC,IAAK;IAC3BpB,YAAY,CAAC,IAAI,CAAC;IAClBE,SAAS,CAACkB,CAAC,CAACC,WAAW,CAACC,OAAO,CAAC;IAChClB,SAAS,CAACgB,CAAC,CAACC,WAAW,CAACE,OAAO,CAAC;EACpC,CAAC;EAED,MAAMC,eAAe,GAAIJ,CAAC,IAAK;IAC3B,IAAI,CAACrB,SAAS,EAAE;IAChBO,OAAO,CAACc,CAAC,CAACC,WAAW,CAACC,OAAO,CAAC;IAC9Bd,OAAO,CAACY,CAAC,CAACC,WAAW,CAACE,OAAO,CAAC;EAClC,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IACxBzB,YAAY,CAAC,KAAK,CAAC;IACnB;IACAU,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;MAAER,MAAM;MAAEE,MAAM;MAAEE,IAAI;MAAEE;IAAK,CAAC,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMmB,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAI,CAAC7B,OAAO,EAAE;IACdA,OAAO,CAAC8B,WAAW,GAAG,KAAK;IAC3B9B,OAAO,CAAC+B,SAAS,GAAG,CAAC;IACrBnB,MAAM,CAACoB,OAAO,CAAC,CAAC;MAAE5B,MAAM;MAAEE,MAAM;MAAEE,IAAI;MAAEE;IAAK,CAAC,KAAK;MAC/C,MAAMS,KAAK,GAAGX,IAAI,GAAGJ,MAAM;MAC3B,MAAMgB,MAAM,GAAGV,IAAI,GAAGJ,MAAM;MAC5BN,OAAO,CAACiC,UAAU,CAAC7B,MAAM,EAAEE,MAAM,EAAEa,KAAK,EAAEC,MAAM,CAAC;IACrD,CAAC,CAAC;EACN,CAAC;EAED9B,SAAS,CAAC,MAAM;IACZuC,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACjB,MAAM,CAAC,CAAC;EAEZ,MAAMsB,UAAU,GAAGA,CAAA,KAAM;IACrBrC,MAAM,CAACE,SAAS,CAACgB,OAAO,CAACoB,SAAS,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,oBACI1C,OAAA;IAAK2C,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACnC5C,OAAA;MACI6C,GAAG,EAAEvC,SAAU;MACfqC,SAAS,EAAC,cAAc;MACxBG,WAAW,EAAEjB,eAAgB;MAC7BkB,WAAW,EAAEb,eAAgB;MAC7Bc,SAAS,EAAEb;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFpD,OAAA;MAAK2C,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACjC5C,OAAA;QAAQqD,OAAO,EAAElD,OAAQ;QAAAyC,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxCpD,OAAA;QAAQqD,OAAO,EAAEZ,UAAW;QAAAG,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC/C,EAAA,CAxEQJ,WAAW;AAAAqD,EAAA,GAAXrD,WAAW;AA0EpB,eAAeA,WAAW;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}