{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/xray-editor/src/UpToolbar/UpToolbar.jsx\",\n  _s = $RefreshSig$();\n// UpToolbar.js\nimport React, { useState } from 'react';\nimport './UpToolbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpToolbar({\n  onFilesSelect\n}) {\n  _s();\n  const [isImportHovered, setIsImportHovered] = useState(false);\n  const handleFileChange = e => {\n    const files = Array.from(e.target.files);\n    onFilesSelect(files); // Passing selected files to the parent component\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toolbar-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"up-toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toolbar-btn\",\n          onMouseEnter: () => setIsImportHovered(true),\n          onMouseLeave: () => setIsImportHovered(false),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(\"../icons/import.png\"),\n            alt: \"Import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              opacity: isImportHovered ? 1 : 0\n            },\n            children: \"Import Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        accept: \"image/*\",\n        multiple: true,\n        style: {\n          display: 'none'\n        },\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(UpToolbar, \"cVF9Zyqf5d3SAMqJu7ZUTbnIgYc=\");\n_c = UpToolbar;\nexport default UpToolbar;\nvar _c;\n$RefreshReg$(_c, \"UpToolbar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UpToolbar","onFilesSelect","_s","isImportHovered","setIsImportHovered","handleFileChange","e","files","Array","from","target","className","children","htmlFor","onMouseEnter","onMouseLeave","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","opacity","type","id","accept","multiple","display","onChange","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/xray-editor/src/UpToolbar/UpToolbar.jsx"],"sourcesContent":["// UpToolbar.js\nimport React, { useState } from 'react';\nimport './UpToolbar.css';\n\nfunction UpToolbar({ onFilesSelect }) {\n    const [isImportHovered, setIsImportHovered] = useState(false);\n\n    const handleFileChange = (e) => {\n        const files = Array.from(e.target.files);\n        onFilesSelect(files); // Passing selected files to the parent component\n    };\n\n    return (\n        <div className=\"toolbar-container\">\n            <div className=\"up-toolbar\">\n                <label htmlFor=\"fileInput\">\n                    <button\n                        className=\"toolbar-btn\"\n                        onMouseEnter={() => setIsImportHovered(true)}\n                        onMouseLeave={() => setIsImportHovered(false)}\n                    >\n                        <img src={require(\"../icons/import.png\")} alt=\"Import\"/>\n                        <span style={{ opacity: isImportHovered ? 1 : 0 }}>Import Image</span>\n                    </button>\n                </label>\n                <input\n                    type=\"file\"\n                    id=\"fileInput\"\n                    accept=\"image/*\"\n                    multiple\n                    style={{ display: 'none' }}\n                    onChange={handleFileChange}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default UpToolbar;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACH,CAAC,CAACI,MAAM,CAACH,KAAK,CAAC;IACxCN,aAAa,CAACM,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACIR,OAAA;IAAKY,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAC9Bb,OAAA;MAAKY,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBb,OAAA;QAAOc,OAAO,EAAC,WAAW;QAAAD,QAAA,eACtBb,OAAA;UACIY,SAAS,EAAC,aAAa;UACvBG,YAAY,EAAEA,CAAA,KAAMV,kBAAkB,CAAC,IAAI,CAAE;UAC7CW,YAAY,EAAEA,CAAA,KAAMX,kBAAkB,CAAC,KAAK,CAAE;UAAAQ,QAAA,gBAE9Cb,OAAA;YAAKiB,GAAG,EAAEC,OAAO,CAAC,qBAAqB,CAAE;YAACC,GAAG,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACxDvB,OAAA;YAAMwB,KAAK,EAAE;cAAEC,OAAO,EAAErB,eAAe,GAAG,CAAC,GAAG;YAAE,CAAE;YAAAS,QAAA,EAAC;UAAY;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACRvB,OAAA;QACI0B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,WAAW;QACdC,MAAM,EAAC,SAAS;QAChBC,QAAQ;QACRL,KAAK,EAAE;UAAEM,OAAO,EAAE;QAAO,CAAE;QAC3BC,QAAQ,EAAEzB;MAAiB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACpB,EAAA,CAhCQF,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAkClB,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}