{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ImageViewer.css';\nimport SideToolbar from '../SideToolbar/SideToolbar';\nimport Cropper from 'react-easy-crop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageViewer({\n  image,\n  onClose,\n  onSave\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [context, setContext] = useState(null);\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = useState(1);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [brightness, setBrightness] = useState(100);\n  const [contrast, setContrast] = useState(100);\n  const [shapes, setShapes] = useState([]);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(0);\n  const [dragStartY, setDragStartY] = useState(0);\n  useEffect(() => {\n    if (image) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImageSrc(reader.result);\n      };\n      reader.readAsDataURL(image);\n    }\n  }, [image]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    setContext(ctx);\n    if (context && imageSrc) {\n      const img = new Image();\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\n        ctx.drawImage(img, 0, 0);\n        shapes.forEach((shape, index) => {\n          drawShape(ctx, shape, index === selectedShapeIndex);\n        });\n      };\n      img.src = imageSrc;\n    }\n  }, [context, imageSrc, brightness, contrast, shapes, selectedShapeIndex]);\n  const drawShape = (ctx, shape, isSelected) => {\n    ctx.beginPath();\n    if (shape.type === 'square' || shape.type === 'rectangle') {\n      ctx.rect(shape.x, shape.y, shape.width, shape.height);\n    } else if (shape.type === 'circle') {\n      ctx.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n    }\n    ctx.strokeStyle = isSelected ? 'red' : shape.color;\n    ctx.lineWidth = shape.lineWidth;\n    ctx.stroke();\n  };\n  const handleSave = () => {\n    const canvas = canvasRef.current;\n    canvas.toBlob(blob => {\n      onSave(blob);\n    }, 'image/jpeg', 1);\n  };\n  const handleAddSquare = () => {\n    const newShapes = [...shapes];\n    newShapes.push({\n      type: 'square',\n      x: 100,\n      y: 100,\n      width: 50,\n      height: 50,\n      color: 'red',\n      lineWidth: 2\n    });\n    setShapes(newShapes);\n  };\n  const handleAddRectangle = () => {\n    const newShapes = [...shapes];\n    newShapes.push({\n      type: 'rectangle',\n      x: 200,\n      y: 200,\n      width: 80,\n      height: 40,\n      color: 'blue',\n      lineWidth: 2\n    });\n    setShapes(newShapes);\n  };\n  const handleAddCircle = () => {\n    const newShapes = [...shapes];\n    newShapes.push({\n      type: 'circle',\n      x: 300,\n      y: 300,\n      radius: 30,\n      color: 'green',\n      lineWidth: 2\n    });\n    setShapes(newShapes);\n  };\n  const handleMouseDown = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    shapes.forEach((shape, index) => {\n      if (isPointInsideShape(mouseX, mouseY, shape)) {\n        setSelectedShapeIndex(index);\n        setIsDragging(true);\n        setDragStartX(mouseX - shape.x);\n        setDragStartY(mouseY - shape.y);\n      }\n    });\n  };\n  const handleMouseMove = e => {\n    if (!isDragging || selectedShapeIndex === null) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    const newShapes = [...shapes];\n    const shape = newShapes[selectedShapeIndex];\n    if (shape.type === 'square' || shape.type === 'rectangle') {\n      shape.x = mouseX - dragStartX;\n      shape.y = mouseY - dragStartY;\n    } else if (shape.type === 'circle') {\n      shape.x = mouseX;\n      shape.y = mouseY;\n    }\n    setShapes(newShapes);\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  const isPointInsideShape = (x, y, shape) => {\n    if (shape.type === 'square' || shape.type === 'rectangle') {\n      return x >= shape.x && x <= shape.x + shape.width && y >= shape.y && y <= shape.y + shape.height;\n    } else if (shape.type === 'circle') {\n      const dx = x - shape.x;\n      const dy = y - shape.y;\n      return dx * dx + dy * dy <= shape.radius * shape.radius;\n    }\n    return false;\n  };\n  const handleZoomIn = () => {\n    setZoom(zoom + 0.1);\n  };\n  const handleZoomOut = () => {\n    setZoom(zoom - 0.1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      style: {\n        border: '1px solid black',\n        transform: `scale(${zoom})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomIn,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomOut,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideToolbar, {\n      onBrightnessChange: setBrightness,\n      onContrastChange: setContrast,\n      onAddSquare: handleAddSquare,\n      onAddRectangle: handleAddRectangle,\n      onAddCircle: handleAddCircle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageViewer, \"pP4alztrWQ86pWeA1WEJ3qSvYOQ=\");\n_c = ImageViewer;\nexport default ImageViewer;\nvar _c;\n$RefreshReg$(_c, \"ImageViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","SideToolbar","Cropper","jsxDEV","_jsxDEV","ImageViewer","image","onClose","onSave","_s","canvasRef","context","setContext","crop","setCrop","x","y","zoom","setZoom","imageSrc","setImageSrc","brightness","setBrightness","contrast","setContrast","shapes","setShapes","selectedShapeIndex","setSelectedShapeIndex","isDragging","setIsDragging","dragStartX","setDragStartX","dragStartY","setDragStartY","reader","FileReader","onload","result","readAsDataURL","canvas","current","ctx","getContext","img","Image","width","height","filter","drawImage","forEach","shape","index","drawShape","src","isSelected","beginPath","type","rect","arc","radius","Math","PI","strokeStyle","color","lineWidth","stroke","handleSave","toBlob","blob","handleAddSquare","newShapes","push","handleAddRectangle","handleAddCircle","handleMouseDown","e","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","isPointInsideShape","handleMouseMove","handleMouseUp","dx","dy","handleZoomIn","handleZoomOut","className","children","ref","onMouseDown","onMouseMove","onMouseUp","style","border","transform","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onBrightnessChange","onContrastChange","onAddSquare","onAddRectangle","onAddCircle","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './ImageViewer.css';\nimport SideToolbar from '../SideToolbar/SideToolbar';\nimport Cropper from 'react-easy-crop';\n\nfunction ImageViewer({ image, onClose, onSave }) {\n    const canvasRef = useRef(null);\n    const [context, setContext] = useState(null);\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    const [zoom, setZoom] = useState(1);\n    const [imageSrc, setImageSrc] = useState(null);\n    const [brightness, setBrightness] = useState(100);\n    const [contrast, setContrast] = useState(100);\n    const [shapes, setShapes] = useState([]);\n    const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\n    const [isDragging, setIsDragging] = useState(false);\n    const [dragStartX, setDragStartX] = useState(0);\n    const [dragStartY, setDragStartY] = useState(0);\n\n    useEffect(() => {\n        if (image) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                setImageSrc(reader.result);\n            };\n            reader.readAsDataURL(image);\n        }\n    }, [image]);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        setContext(ctx);\n        if (context && imageSrc) {\n            const img = new Image();\n            img.onload = () => {\n                canvas.width = img.width;\n                canvas.height = img.height;\n                ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\n                ctx.drawImage(img, 0, 0);\n                shapes.forEach((shape, index) => {\n                    drawShape(ctx, shape, index === selectedShapeIndex);\n                });\n            };\n            img.src = imageSrc;\n        }\n    }, [context, imageSrc, brightness, contrast, shapes, selectedShapeIndex]);\n\n    const drawShape = (ctx, shape, isSelected) => {\n        ctx.beginPath();\n        if (shape.type === 'square' || shape.type === 'rectangle') {\n            ctx.rect(shape.x, shape.y, shape.width, shape.height);\n        } else if (shape.type === 'circle') {\n            ctx.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n        }\n        ctx.strokeStyle = isSelected ? 'red' : shape.color;\n        ctx.lineWidth = shape.lineWidth;\n        ctx.stroke();\n    };\n\n    const handleSave = () => {\n        const canvas = canvasRef.current;\n        canvas.toBlob(blob => {\n            onSave(blob);\n        }, 'image/jpeg', 1);\n    };\n\n    const handleAddSquare = () => {\n        const newShapes = [...shapes];\n        newShapes.push({\n            type: 'square',\n            x: 100,\n            y: 100,\n            width: 50,\n            height: 50,\n            color: 'red',\n            lineWidth: 2,\n        });\n        setShapes(newShapes);\n    };\n\n    const handleAddRectangle = () => {\n        const newShapes = [...shapes];\n        newShapes.push({\n            type: 'rectangle',\n            x: 200,\n            y: 200,\n            width: 80,\n            height: 40,\n            color: 'blue',\n            lineWidth: 2,\n        });\n        setShapes(newShapes);\n    };\n\n    const handleAddCircle = () => {\n        const newShapes = [...shapes];\n        newShapes.push({\n            type: 'circle',\n            x: 300,\n            y: 300,\n            radius: 30,\n            color: 'green',\n            lineWidth: 2,\n        });\n        setShapes(newShapes);\n    };\n\n    const handleMouseDown = (e) => {\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        const mouseX = e.clientX - rect.left;\n        const mouseY = e.clientY - rect.top;\n\n        shapes.forEach((shape, index) => {\n            if (isPointInsideShape(mouseX, mouseY, shape)) {\n                setSelectedShapeIndex(index);\n                setIsDragging(true);\n                setDragStartX(mouseX - shape.x);\n                setDragStartY(mouseY - shape.y);\n            }\n        });\n    };\n\n    const handleMouseMove = (e) => {\n        if (!isDragging || selectedShapeIndex === null) return;\n\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        const mouseX = e.clientX - rect.left;\n        const mouseY = e.clientY - rect.top;\n\n        const newShapes = [...shapes];\n        const shape = newShapes[selectedShapeIndex];\n        if (shape.type === 'square' || shape.type === 'rectangle') {\n            shape.x = mouseX - dragStartX;\n            shape.y = mouseY - dragStartY;\n        } else if (shape.type === 'circle') {\n            shape.x = mouseX;\n            shape.y = mouseY;\n        }\n        setShapes(newShapes);\n    };\n\n    const handleMouseUp = () => {\n        setIsDragging(false);\n    };\n\n    const isPointInsideShape = (x, y, shape) => {\n        if (shape.type === 'square' || shape.type === 'rectangle') {\n            return x >= shape.x && x <= (shape.x + shape.width) &&\n                y >= shape.y && y <= (shape.y + shape.height);\n        } else if (shape.type === 'circle') {\n            const dx = x - shape.x;\n            const dy = y - shape.y;\n            return dx * dx + dy * dy <= shape.radius * shape.radius;\n        }\n        return false;\n    };\n\n    const handleZoomIn = () => {\n        setZoom(zoom + 0.1);\n    };\n\n    const handleZoomOut = () => {\n        setZoom(zoom - 0.1);\n    };\n\n    return (\n        <div className=\"image-viewer\">\n            <canvas\n                ref={canvasRef}\n                onMouseDown={handleMouseDown}\n                onMouseMove={handleMouseMove}\n                onMouseUp={handleMouseUp}\n                style={{ border: '1px solid black', transform: `scale(${zoom})` }}\n            />\n            <div className=\"controls\">\n                <button onClick={handleZoomIn}>Zoom In</button>\n                <button onClick={handleZoomOut}>Zoom Out</button>\n                <button onClick={handleSave}>Save</button>\n                <button onClick={onClose}>Close</button>\n            </div>\n            <SideToolbar\n                onBrightnessChange={setBrightness}\n                onContrastChange={setContrast}\n                onAddSquare={handleAddSquare}\n                onAddRectangle={handleAddRectangle}\n                onAddCircle={handleAddCircle}\n            />\n        </div>\n    );\n}\n\nexport default ImageViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}