{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ImageViewer.css';\nimport SideToolbar from '../SideToolbar/SideToolbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageViewer({\n  image,\n  onClose,\n  onSave\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [context, setContext] = useState(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [brightness, setBrightness] = useState(100);\n  const [contrast, setContrast] = useState(100);\n  const [shapes, setShapes] = useState([]);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(0);\n  const [dragStartY, setDragStartY] = useState(0);\n  useEffect(() => {\n    if (image) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImageSrc(reader.result);\n      };\n      reader.readAsDataURL(image);\n    }\n  }, [image]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    setContext(ctx);\n    if (context && imageSrc) {\n      const img = new Image();\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\n        ctx.drawImage(img, 0, 0);\n        shapes.forEach((shape, index) => {\n          drawShape(ctx, shape, index === selectedShapeIndex);\n        });\n      };\n      img.src = imageSrc;\n    }\n  }, [context, imageSrc, brightness, contrast, shapes, selectedShapeIndex]);\n  const drawShape = (ctx, shape, isSelected) => {\n    ctx.beginPath();\n    ctx.strokeStyle = isSelected ? 'red' : shape.color;\n    ctx.lineWidth = shape.lineWidth;\n    if (shape.type === 'square') {\n      ctx.rect(shape.x, shape.y, shape.width, shape.height);\n    } else if (shape.type === 'rectangle') {\n      ctx.rect(shape.x, shape.y, shape.width, shape.height);\n    } else if (shape.type === 'circle') {\n      ctx.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n    }\n    ctx.stroke();\n  };\n  const handleSave = () => {\n    const canvas = canvasRef.current;\n    canvas.toBlob(blob => {\n      onSave(blob);\n    }, 'image/jpeg', 1);\n  };\n  const handleMouseDown = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    shapes.forEach((shape, index) => {\n      if (isPointInsideShape(mouseX, mouseY, shape)) {\n        setSelectedShapeIndex(index);\n        setIsDragging(true);\n        setDragStartX(mouseX - shape.x);\n        setDragStartY(mouseY - shape.y);\n      }\n    });\n  };\n  const handleMouseMove = e => {\n    if (!isDragging || selectedShapeIndex === null) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    const newShapes = [...shapes];\n    const shape = newShapes[selectedShapeIndex];\n    shape.x = mouseX - dragStartX;\n    shape.y = mouseY - dragStartY;\n    setShapes(newShapes);\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  const isPointInsideShape = (x, y, shape) => {\n    if (shape.type === 'square' || shape.type === 'rectangle') {\n      return x >= shape.x && x <= shape.x + shape.width && y >= shape.y && y <= shape.y + shape.height;\n    } else if (shape.type === 'circle') {\n      const dx = x - shape.x;\n      const dy = y - shape.y;\n      return dx * dx + dy * dy <= shape.radius * shape.radius;\n    }\n    return false;\n  };\n  const addSquare = () => {\n    setShapes([...shapes, {\n      type: 'square',\n      x: 50,\n      y: 50,\n      width: 50,\n      height: 50,\n      color: 'black',\n      lineWidth: 2\n    }]);\n  };\n  const addRectangle = () => {\n    setShapes([...shapes, {\n      type: 'rectangle',\n      x: 100,\n      y: 100,\n      width: 80,\n      height: 50,\n      color: 'black',\n      lineWidth: 2\n    }]);\n  };\n  const addCircle = () => {\n    setShapes([...shapes, {\n      type: 'circle',\n      x: 200,\n      y: 200,\n      radius: 40,\n      color: 'black',\n      lineWidth: 2\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSquare,\n        children: \"Add Square\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addRectangle,\n        children: \"Add Rectangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCircle,\n        children: \"Add Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideToolbar, {\n      onBrightnessChange: setBrightness,\n      onContrastChange: setContrast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageViewer, \"p7XR/Zypvc4oujMO6UPBnUTHB7k=\");\n_c = ImageViewer;\nexport default ImageViewer;\nvar _c;\n$RefreshReg$(_c, \"ImageViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","SideToolbar","jsxDEV","_jsxDEV","ImageViewer","image","onClose","onSave","_s","canvasRef","context","setContext","imageSrc","setImageSrc","brightness","setBrightness","contrast","setContrast","shapes","setShapes","selectedShapeIndex","setSelectedShapeIndex","isDragging","setIsDragging","dragStartX","setDragStartX","dragStartY","setDragStartY","reader","FileReader","onload","result","readAsDataURL","canvas","current","ctx","getContext","img","Image","width","height","filter","drawImage","forEach","shape","index","drawShape","src","isSelected","beginPath","strokeStyle","color","lineWidth","type","rect","x","y","arc","radius","Math","PI","stroke","handleSave","toBlob","blob","handleMouseDown","e","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","isPointInsideShape","handleMouseMove","newShapes","handleMouseUp","dx","dy","addSquare","addRectangle","addCircle","className","children","ref","onMouseDown","onMouseMove","onMouseUp","style","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onBrightnessChange","onContrastChange","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './ImageViewer.css';\nimport SideToolbar from '../SideToolbar/SideToolbar';\n\nfunction ImageViewer({ image, onClose, onSave }) {\n    const canvasRef = useRef(null);\n    const [context, setContext] = useState(null);\n    const [imageSrc, setImageSrc] = useState(null);\n    const [brightness, setBrightness] = useState(100);\n    const [contrast, setContrast] = useState(100);\n    const [shapes, setShapes] = useState([]);\n    const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\n    const [isDragging, setIsDragging] = useState(false);\n    const [dragStartX, setDragStartX] = useState(0);\n    const [dragStartY, setDragStartY] = useState(0);\n\n    useEffect(() => {\n        if (image) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                setImageSrc(reader.result);\n            };\n            reader.readAsDataURL(image);\n        }\n    }, [image]);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        setContext(ctx);\n        if (context && imageSrc) {\n            const img = new Image();\n            img.onload = () => {\n                canvas.width = img.width;\n                canvas.height = img.height;\n                ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\n                ctx.drawImage(img, 0, 0);\n                shapes.forEach((shape, index) => {\n                    drawShape(ctx, shape, index === selectedShapeIndex);\n                });\n            };\n            img.src = imageSrc;\n        }\n    }, [context, imageSrc, brightness, contrast, shapes, selectedShapeIndex]);\n\n    const drawShape = (ctx, shape, isSelected) => {\n        ctx.beginPath();\n        ctx.strokeStyle = isSelected ? 'red' : shape.color;\n        ctx.lineWidth = shape.lineWidth;\n\n        if (shape.type === 'square') {\n            ctx.rect(shape.x, shape.y, shape.width, shape.height);\n        } else if (shape.type === 'rectangle') {\n            ctx.rect(shape.x, shape.y, shape.width, shape.height);\n        } else if (shape.type === 'circle') {\n            ctx.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n        }\n\n        ctx.stroke();\n    };\n\n    const handleSave = () => {\n        const canvas = canvasRef.current;\n        canvas.toBlob(blob => {\n            onSave(blob);\n        }, 'image/jpeg', 1);\n    };\n\n    const handleMouseDown = (e) => {\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        const mouseX = e.clientX - rect.left;\n        const mouseY = e.clientY - rect.top;\n\n        shapes.forEach((shape, index) => {\n            if (isPointInsideShape(mouseX, mouseY, shape)) {\n                setSelectedShapeIndex(index);\n                setIsDragging(true);\n                setDragStartX(mouseX - shape.x);\n                setDragStartY(mouseY - shape.y);\n            }\n        });\n    };\n\n    const handleMouseMove = (e) => {\n        if (!isDragging || selectedShapeIndex === null) return;\n\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        const mouseX = e.clientX - rect.left;\n        const mouseY = e.clientY - rect.top;\n\n        const newShapes = [...shapes];\n        const shape = newShapes[selectedShapeIndex];\n        shape.x = mouseX - dragStartX;\n        shape.y = mouseY - dragStartY;\n        setShapes(newShapes);\n    };\n\n    const handleMouseUp = () => {\n        setIsDragging(false);\n    };\n\n    const isPointInsideShape = (x, y, shape) => {\n        if (shape.type === 'square' || shape.type === 'rectangle') {\n            return x >= shape.x && x <= (shape.x + shape.width) &&\n                y >= shape.y && y <= (shape.y + shape.height);\n        } else if (shape.type === 'circle') {\n            const dx = x - shape.x;\n            const dy = y - shape.y;\n            return dx * dx + dy * dy <= shape.radius * shape.radius;\n        }\n        return false;\n    };\n\n    const addSquare = () => {\n        setShapes([...shapes, { type: 'square', x: 50, y: 50, width: 50, height: 50, color: 'black', lineWidth: 2 }]);\n    };\n\n    const addRectangle = () => {\n        setShapes([...shapes, { type: 'rectangle', x: 100, y: 100, width: 80, height: 50, color: 'black', lineWidth: 2 }]);\n    };\n\n    const addCircle = () => {\n        setShapes([...shapes, { type: 'circle', x: 200, y: 200, radius: 40, color: 'black', lineWidth: 2 }]);\n    };\n\n    return (\n        <div className=\"image-viewer\">\n            <canvas\n                ref={canvasRef}\n                onMouseDown={handleMouseDown}\n                onMouseMove={handleMouseMove}\n                onMouseUp={handleMouseUp}\n                style={{ border: '1px solid black' }}\n            />\n            <div className=\"controls\">\n                <button onClick={addSquare}>Add Square</button>\n                <button onClick={addRectangle}>Add Rectangle</button>\n                <button onClick={addCircle}>Add Circle</button>\n                <button onClick={handleSave}>Save</button>\n                <button onClick={onClose}>Close</button>\n            </div>\n            <SideToolbar\n                onBrightnessChange={setBrightness}\n                onContrastChange={setContrast}\n            />\n        </div>\n    );\n}\n\nexport default ImageViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}