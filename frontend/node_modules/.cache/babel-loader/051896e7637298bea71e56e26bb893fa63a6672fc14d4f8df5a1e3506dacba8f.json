{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/xray-editor/src/ImageEditor/ImageEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ImageEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageEditor({\n  images\n}) {\n  _s();\n  const containerRef = useRef(null);\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [containerHeight, setContainerHeight] = useState(0);\n  const [maxImageSize, setMaxImageSize] = useState(0);\n  useEffect(() => {\n    const updateContainerSize = () => {\n      const container = containerRef.current;\n      if (container) {\n        setContainerWidth(container.offsetWidth);\n        setContainerHeight(container.offsetHeight);\n      }\n    };\n    window.addEventListener('resize', updateContainerSize);\n    updateContainerSize();\n    return () => {\n      window.removeEventListener('resize', updateContainerSize);\n    };\n  }, []);\n  useEffect(() => {\n    const calculateMaxImageSize = () => {\n      const numImages = images.length;\n      const rowImages = Math.floor(containerWidth / 100); // Adjust 300 as needed for desired image width\n      const colImages = Math.ceil(numImages / rowImages);\n      const width = containerWidth / rowImages;\n      const height = containerHeight / colImages;\n      return Math.min(width, height);\n    };\n    setMaxImageSize(calculateMaxImageSize());\n  }, [containerWidth, containerHeight, images]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-editor\",\n    ref: containerRef,\n    children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      style: {\n        width: maxImageSize,\n        height: maxImageSize\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(image),\n        alt: `Image ${index}`,\n        className: \"image-item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageEditor, \"h1AmvKo7AaRoksEDEtnWGzHNEwE=\");\n_c = ImageEditor;\nexport default ImageEditor;\nvar _c;\n$RefreshReg$(_c, \"ImageEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","ImageEditor","images","_s","containerRef","containerWidth","setContainerWidth","containerHeight","setContainerHeight","maxImageSize","setMaxImageSize","updateContainerSize","container","current","offsetWidth","offsetHeight","window","addEventListener","removeEventListener","calculateMaxImageSize","numImages","length","rowImages","Math","floor","colImages","ceil","width","height","min","className","ref","children","map","image","index","style","src","URL","createObjectURL","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/xray-editor/src/ImageEditor/ImageEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './ImageEditor.css';\n\nfunction ImageEditor({ images }) {\n    const containerRef = useRef(null);\n    const [containerWidth, setContainerWidth] = useState(0);\n    const [containerHeight, setContainerHeight] = useState(0);\n    const [maxImageSize, setMaxImageSize] = useState(0);\n\n    useEffect(() => {\n        const updateContainerSize = () => {\n            const container = containerRef.current;\n            if (container) {\n                setContainerWidth(container.offsetWidth);\n                setContainerHeight(container.offsetHeight);\n            }\n        };\n\n        window.addEventListener('resize', updateContainerSize);\n        updateContainerSize();\n\n        return () => {\n            window.removeEventListener('resize', updateContainerSize);\n        };\n    }, []);\n\n    useEffect(() => {\n        const calculateMaxImageSize = () => {\n            const numImages = images.length;\n            const rowImages = Math.floor(containerWidth / 100); // Adjust 300 as needed for desired image width\n            const colImages = Math.ceil(numImages / rowImages);\n            const width = containerWidth / rowImages;\n            const height = containerHeight / colImages;\n            return Math.min(width, height);\n        };\n\n        setMaxImageSize(calculateMaxImageSize());\n    }, [containerWidth, containerHeight, images]);\n\n    return (\n        <div className=\"image-editor\" ref={containerRef}>\n            {images.map((image, index) => (\n                <div key={index} className=\"image-container\" style={{ width: maxImageSize, height: maxImageSize }}>\n                    <img\n                        src={URL.createObjectURL(image)}\n                        alt={`Image ${index}`}\n                        className=\"image-item\"\n                    />\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default ImageEditor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC7B,MAAMC,YAAY,GAAGR,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACZ,MAAMc,mBAAmB,GAAGA,CAAA,KAAM;MAC9B,MAAMC,SAAS,GAAGR,YAAY,CAACS,OAAO;MACtC,IAAID,SAAS,EAAE;QACXN,iBAAiB,CAACM,SAAS,CAACE,WAAW,CAAC;QACxCN,kBAAkB,CAACI,SAAS,CAACG,YAAY,CAAC;MAC9C;IACJ,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEN,mBAAmB,CAAC;IACtDA,mBAAmB,CAAC,CAAC;IAErB,OAAO,MAAM;MACTK,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEP,mBAAmB,CAAC;IAC7D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACZ,MAAMsB,qBAAqB,GAAGA,CAAA,KAAM;MAChC,MAAMC,SAAS,GAAGlB,MAAM,CAACmB,MAAM;MAC/B,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACnB,cAAc,GAAG,GAAG,CAAC,CAAC,CAAC;MACpD,MAAMoB,SAAS,GAAGF,IAAI,CAACG,IAAI,CAACN,SAAS,GAAGE,SAAS,CAAC;MAClD,MAAMK,KAAK,GAAGtB,cAAc,GAAGiB,SAAS;MACxC,MAAMM,MAAM,GAAGrB,eAAe,GAAGkB,SAAS;MAC1C,OAAOF,IAAI,CAACM,GAAG,CAACF,KAAK,EAAEC,MAAM,CAAC;IAClC,CAAC;IAEDlB,eAAe,CAACS,qBAAqB,CAAC,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACd,cAAc,EAAEE,eAAe,EAAEL,MAAM,CAAC,CAAC;EAE7C,oBACIF,OAAA;IAAK8B,SAAS,EAAC,cAAc;IAACC,GAAG,EAAE3B,YAAa;IAAA4B,QAAA,EAC3C9B,MAAM,CAAC+B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBnC,OAAA;MAAiB8B,SAAS,EAAC,iBAAiB;MAACM,KAAK,EAAE;QAAET,KAAK,EAAElB,YAAY;QAAEmB,MAAM,EAAEnB;MAAa,CAAE;MAAAuB,QAAA,eAC9FhC,OAAA;QACIqC,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACL,KAAK,CAAE;QAChCM,GAAG,EAAG,SAAQL,KAAM,EAAE;QACtBL,SAAS,EAAC;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC,GALIT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACzC,EAAA,CAjDQF,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAmDpB,eAAeA,WAAW;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}