{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/xray-editor/src/SideToolbar/SideToolbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SideToolbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SideToolbar({\n  onBrightnessChange,\n  onContrastChange,\n  onAddRectangle,\n  onPenModeChange,\n  onRubberModeChange\n}) {\n  _s();\n  const [penMode, setPenMode] = useState(false);\n  const [rubberMode, setRubberMode] = useState(false);\n  const [penColor, setPenColor] = useState('#000000');\n  const [penThickness, setPenThickness] = useState(2);\n  const handleBrightnessInputChange = e => {\n    const value = parseInt(e.target.value);\n    onBrightnessChange(value);\n  };\n  const handleContrastInputChange = e => {\n    const value = parseInt(e.target.value);\n    onContrastChange(value);\n  };\n  const handlePenColorChange = color => {\n    setPenColor(color);\n  };\n  const handlePenThicknessChange = thickness => {\n    setPenThickness(thickness);\n  };\n  const handlePenModeToggle = () => {\n    const newPenMode = !penMode;\n    setPenMode(newPenMode);\n    onPenModeChange(newPenMode);\n    if (newPenMode && rubberMode) {\n      setRubberMode(false);\n      onRubberModeChange(false);\n    }\n  };\n  const handleRubberModeToggle = () => {\n    const newRubberMode = !rubberMode;\n    setRubberMode(newRubberMode);\n    onRubberModeChange(newRubberMode);\n    if (newRubberMode && penMode) {\n      setPenMode(false);\n      onPenModeChange(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"side-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"brightness\",\n        children: \"Brightness:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"brightness\",\n        min: \"0\",\n        max: \"200\",\n        defaultValue: \"100\",\n        onChange: handleBrightnessInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contrast\",\n        children: \"Contrast:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"contrast\",\n        min: \"0\",\n        max: \"200\",\n        defaultValue: \"100\",\n        onChange: handleContrastInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAddRectangle,\n        children: \"Add Rectangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"penColor\",\n        children: \"Pen Color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        id: \"penColor\",\n        value: penColor,\n        onChange: handlePenColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"penThickness\",\n        children: \"Pen Thickness:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"penThickness\",\n        min: \"1\",\n        max: \"10\",\n        value: penThickness,\n        onChange: handlePenThicknessChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePenModeToggle,\n        children: penMode ? 'Disable Pen Mode' : 'Enable Pen Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRubberModeToggle,\n        children: rubberMode ? 'Disable Rubber Mode' : 'Enable Rubber Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(SideToolbar, \"EHxd7hHKRtH2nTUfAgUVFQ9X7m0=\");\n_c = SideToolbar;\nexport default SideToolbar;\nvar _c;\n$RefreshReg$(_c, \"SideToolbar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SideToolbar","onBrightnessChange","onContrastChange","onAddRectangle","onPenModeChange","onRubberModeChange","_s","penMode","setPenMode","rubberMode","setRubberMode","penColor","setPenColor","penThickness","setPenThickness","handleBrightnessInputChange","e","value","parseInt","target","handleContrastInputChange","handlePenColorChange","color","handlePenThicknessChange","thickness","handlePenModeToggle","newPenMode","handleRubberModeToggle","newRubberMode","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","min","max","defaultValue","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/xray-editor/src/SideToolbar/SideToolbar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './SideToolbar.css';\n\nfunction SideToolbar({ onBrightnessChange, onContrastChange, onAddRectangle, onPenModeChange, onRubberModeChange }) {\n    const [penMode, setPenMode] = useState(false);\n    const [rubberMode, setRubberMode] = useState(false);\n    const [penColor, setPenColor] = useState('#000000');\n    const [penThickness, setPenThickness] = useState(2);\n\n    const handleBrightnessInputChange = (e) => {\n        const value = parseInt(e.target.value);\n        onBrightnessChange(value);\n    };\n\n    const handleContrastInputChange = (e) => {\n        const value = parseInt(e.target.value);\n        onContrastChange(value);\n    };\n\n\n    const handlePenColorChange = (color) => {\n        setPenColor(color);\n    };\n\n    const handlePenThicknessChange = (thickness) => {\n        setPenThickness(thickness);\n    };\n\n    const handlePenModeToggle = () => {\n        const newPenMode = !penMode;\n        setPenMode(newPenMode);\n        onPenModeChange(newPenMode);\n        if (newPenMode && rubberMode) {\n            setRubberMode(false);\n            onRubberModeChange(false);\n        }\n    };\n\n    const handleRubberModeToggle = () => {\n        const newRubberMode = !rubberMode;\n        setRubberMode(newRubberMode);\n        onRubberModeChange(newRubberMode);\n        if (newRubberMode && penMode) {\n            setPenMode(false);\n            onPenModeChange(false);\n        }\n    };\n\n    return (\n        <div className=\"side-toolbar\">\n            <div>\n                <label htmlFor=\"brightness\">Brightness:</label>\n                <input\n                    type=\"range\"\n                    id=\"brightness\"\n                    min=\"0\"\n                    max=\"200\"\n                    defaultValue=\"100\"\n                    onChange={handleBrightnessInputChange}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"contrast\">Contrast:</label>\n                <input\n                    type=\"range\"\n                    id=\"contrast\"\n                    min=\"0\"\n                    max=\"200\"\n                    defaultValue=\"100\"\n                    onChange={handleContrastInputChange}\n                />\n            </div>\n            <div>\n                <button onClick={onAddRectangle}>Add Rectangle</button>\n            </div>\n            <div>\n                <label htmlFor=\"penColor\">Pen Color:</label>\n                <input\n                    type=\"color\"\n                    id=\"penColor\"\n                    value={penColor}\n                    onChange={handlePenColorChange}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"penThickness\">Pen Thickness:</label>\n                <input\n                    type=\"number\"\n                    id=\"penThickness\"\n                    min=\"1\"\n                    max=\"10\"\n                    value={penThickness}\n                    onChange={handlePenThicknessChange}\n                />\n            </div>\n            <div>\n                <button onClick={handlePenModeToggle}>{penMode ? 'Disable Pen Mode' : 'Enable Pen Mode'}</button>\n            </div>\n            <div>\n                <button onClick={handleRubberModeToggle}>{rubberMode ? 'Disable Rubber Mode' : 'Enable Rubber Mode'}</button>\n            </div>\n        </div>\n    );\n}\n\nexport default SideToolbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}