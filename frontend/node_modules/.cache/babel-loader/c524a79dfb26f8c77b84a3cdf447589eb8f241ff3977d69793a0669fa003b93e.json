{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx\",\n  _s = $RefreshSig$();\n// ImageViewer.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ImageViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageViewer({\n  image,\n  onClose,\n  onSave\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [context, setContext] = useState(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [brightness, setBrightness] = useState(100);\n  const [contrast, setContrast] = useState(100);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [prevMouseX, setPrevMouseX] = useState(0);\n  const [prevMouseY, setPrevMouseY] = useState(0);\n  const [penMode, setPenMode] = useState(false);\n  const [rubberMode, setRubberMode] = useState(false);\n  const [penColor, setPenColor] = useState('#000000');\n  const [penThickness, setPenThickness] = useState(2);\n  useEffect(() => {\n    if (image) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImageSrc(reader.result);\n      };\n      reader.readAsDataURL(image);\n    }\n  }, [image]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    setContext(ctx);\n    if (context && imageSrc) {\n      const img = new Image();\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\n        ctx.drawImage(img, 0, 0);\n      };\n      img.src = imageSrc;\n    }\n  }, [context, imageSrc, brightness, contrast]);\n  const handleMouseDown = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    setIsDrawing(true);\n    setPrevMouseX(mouseX);\n    setPrevMouseY(mouseY);\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing || !penMode && !rubberMode) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    const ctx = canvas.getContext('2d');\n    ctx.strokeStyle = rubberMode ? '#FFFFFF' : penColor;\n    ctx.lineWidth = penThickness;\n    ctx.lineCap = 'round';\n    ctx.beginPath();\n    ctx.moveTo(prevMouseX, prevMouseY);\n    ctx.lineTo(mouseX, mouseY);\n    ctx.stroke();\n    ctx.closePath();\n    setPrevMouseX(mouseX);\n    setPrevMouseY(mouseY);\n  };\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n  };\n  const handleTogglePenMode = mode => {\n    setPenMode(mode);\n  };\n  const handleToggleRubberMode = mode => {\n    setRubberMode(mode);\n  };\n  const handlePenColorChange = color => {\n    setPenColor(color);\n  };\n  const handlePenThicknessChange = thickness => {\n    setPenThickness(thickness);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideToolbar, {\n      onBrightnessChange: setBrightness,\n      onContrastChange: setContrast,\n      onTogglePenMode: handleTogglePenMode,\n      onToggleRubberMode: handleToggleRubberMode,\n      onPenColorChange: handlePenColorChange,\n      onPenThicknessChange: handlePenThicknessChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageViewer, \"CQd9aMjG06Pk+kyAsHKElHJiDqE=\");\n_c = ImageViewer;\nexport default ImageViewer;\nvar _c;\n$RefreshReg$(_c, \"ImageViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","ImageViewer","image","onClose","onSave","_s","canvasRef","context","setContext","imageSrc","setImageSrc","brightness","setBrightness","contrast","setContrast","isDrawing","setIsDrawing","prevMouseX","setPrevMouseX","prevMouseY","setPrevMouseY","penMode","setPenMode","rubberMode","setRubberMode","penColor","setPenColor","penThickness","setPenThickness","reader","FileReader","onload","result","readAsDataURL","canvas","current","ctx","getContext","img","Image","width","height","filter","drawImage","src","handleMouseDown","e","rect","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","handleMouseMove","strokeStyle","lineWidth","lineCap","beginPath","moveTo","lineTo","stroke","closePath","handleMouseUp","handleTogglePenMode","mode","handleToggleRubberMode","handlePenColorChange","color","handlePenThicknessChange","thickness","className","children","ref","onMouseDown","onMouseMove","onMouseUp","style","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","SideToolbar","onBrightnessChange","onContrastChange","onTogglePenMode","onToggleRubberMode","onPenColorChange","onPenThicknessChange","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx"],"sourcesContent":["// ImageViewer.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ImageViewer.css';\n\nfunction ImageViewer({ image, onClose, onSave }) {\n    const canvasRef = useRef(null);\n    const [context, setContext] = useState(null);\n    const [imageSrc, setImageSrc] = useState(null);\n    const [brightness, setBrightness] = useState(100);\n    const [contrast, setContrast] = useState(100);\n    const [isDrawing, setIsDrawing] = useState(false);\n    const [prevMouseX, setPrevMouseX] = useState(0);\n    const [prevMouseY, setPrevMouseY] = useState(0);\n    const [penMode, setPenMode] = useState(false);\n    const [rubberMode, setRubberMode] = useState(false);\n    const [penColor, setPenColor] = useState('#000000');\n    const [penThickness, setPenThickness] = useState(2);\n\n    useEffect(() => {\n        if (image) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                setImageSrc(reader.result);\n            };\n            reader.readAsDataURL(image);\n        }\n    }, [image]);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        setContext(ctx);\n        if (context && imageSrc) {\n            const img = new Image();\n            img.onload = () => {\n                canvas.width = img.width;\n                canvas.height = img.height;\n                ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\n                ctx.drawImage(img, 0, 0);\n            };\n            img.src = imageSrc;\n        }\n    }, [context, imageSrc, brightness, contrast]);\n\n    const handleMouseDown = (e) => {\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        const mouseX = e.clientX - rect.left;\n        const mouseY = e.clientY - rect.top;\n        setIsDrawing(true);\n        setPrevMouseX(mouseX);\n        setPrevMouseY(mouseY);\n    };\n\n    const handleMouseMove = (e) => {\n        if (!isDrawing || (!penMode && !rubberMode)) return;\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        const mouseX = e.clientX - rect.left;\n        const mouseY = e.clientY - rect.top;\n        const ctx = canvas.getContext('2d');\n        ctx.strokeStyle = rubberMode ? '#FFFFFF' : penColor;\n        ctx.lineWidth = penThickness;\n        ctx.lineCap = 'round';\n        ctx.beginPath();\n        ctx.moveTo(prevMouseX, prevMouseY);\n        ctx.lineTo(mouseX, mouseY);\n        ctx.stroke();\n        ctx.closePath();\n        setPrevMouseX(mouseX);\n        setPrevMouseY(mouseY);\n    };\n\n    const handleMouseUp = () => {\n        setIsDrawing(false);\n    };\n\n    const handleTogglePenMode = (mode) => {\n        setPenMode(mode);\n    };\n\n    const handleToggleRubberMode = (mode) => {\n        setRubberMode(mode);\n    };\n\n    const handlePenColorChange = (color) => {\n        setPenColor(color);\n    };\n\n    const handlePenThicknessChange = (thickness) => {\n        setPenThickness(thickness);\n    };\n\n    return (\n        <div className=\"image-viewer\">\n            <canvas\n                ref={canvasRef}\n                onMouseDown={handleMouseDown}\n                onMouseMove={handleMouseMove}\n                onMouseUp={handleMouseUp}\n                style={{ border: '1px solid black' }}\n            />\n            <div className=\"controls\">\n                <button onClick={onClose}>Close</button>\n                <button onClick={onSave}>Save</button>\n            </div>\n\n            <SideToolbar\n                onBrightnessChange={setBrightness}\n                onContrastChange={setContrast}\n                onTogglePenMode={handleTogglePenMode}\n                onToggleRubberMode={handleToggleRubberMode}\n                onPenColorChange={handlePenColorChange}\n                onPenThicknessChange={handlePenThicknessChange}\n            />\n        </div>\n    );\n}\n\nexport default ImageViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}