{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport './ImageViewer.css';\nimport SideToolbar from '../SideToolbar/SideToolbar';\nimport Cropper from 'react-easy-crop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageViewer({\n  image,\n  onClose\n}) {\n  _s();\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = useState(1);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [imageSize, setImageSize] = useState(null);\n  const [brightness, setBrightness] = useState(0);\n  const [contrast, setContrast] = useState(0);\n  const [filteredImage, setFilteredImage] = useState(null);\n\n  // Load the image when the component mounts\n  useEffect(() => {\n    if (image) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImageSrc(reader.result);\n      };\n      reader.readAsDataURL(image);\n    }\n  }, [image]);\n\n  // Handle changes in crop\n  const onCropChange = useCallback(crop => {\n    setCrop(crop);\n  }, []);\n\n  // Handle changes in zoom\n  const onZoomChange = useCallback(zoom => {\n    setZoom(zoom);\n  }, []);\n\n  // Handle image load\n  const onImageLoad = useCallback(image => {\n    setImageSize({\n      width: image.naturalWidth,\n      height: image.naturalHeight\n    });\n  }, []);\n\n  // Handle save action\n  const handleSave = async () => {\n    try {\n      // Create canvas and draw cropped image\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      img.src = imageSrc;\n      canvas.width = imageSize.width;\n      canvas.height = imageSize.height;\n      ctx.drawImage(img, crop.x, crop.y, crop.width, crop.height, 0, 0, imageSize.width, imageSize.height);\n\n      // Apply brightness and contrast filters\n      ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\n\n      // Get filtered image data URL\n      const filteredImageUrl = canvas.toDataURL('image/jpeg');\n      setFilteredImage(filteredImageUrl);\n      onClose(filteredImageUrl);\n    } catch (error) {\n      console.error('Error applying filters:', error);\n    }\n  };\n\n  // Handle brightness change\n  const handleBrightnessChange = value => {\n    setBrightness(value);\n    // Call handleSave to apply filters and update the filtered image\n    handleSave();\n  };\n\n  // Handle contrast change\n  const handleContrastChange = value => {\n    setContrast(value);\n    // Call handleSave to apply filters and update the filtered image\n    handleSave();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setZoom(zoom + 0.1),\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setZoom(zoom - 0.1),\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: imageSrc && /*#__PURE__*/_jsxDEV(Cropper, {\n        image: filteredImage || imageSrc // Use filtered image if available\n        ,\n        crop: crop,\n        zoom: zoom,\n        aspect: 4 / 3,\n        onCropChange: onCropChange,\n        onZoomChange: onZoomChange,\n        onImageLoaded: onImageLoad,\n        cropSize: {\n          width: 400,\n          height: 300\n        } // Set the size of the cropper\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideToolbar, {\n      onBrightnessChange: handleBrightnessChange,\n      onContrastChange: handleContrastChange,\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageViewer, \"VQGrkZRvqoPq+I6Rk0RPDGZPm9o=\");\n_c = ImageViewer;\nexport default ImageViewer;\nvar _c;\n$RefreshReg$(_c, \"ImageViewer\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","SideToolbar","Cropper","jsxDEV","_jsxDEV","ImageViewer","image","onClose","_s","crop","setCrop","x","y","zoom","setZoom","imageSrc","setImageSrc","imageSize","setImageSize","brightness","setBrightness","contrast","setContrast","filteredImage","setFilteredImage","reader","FileReader","onload","result","readAsDataURL","onCropChange","onZoomChange","onImageLoad","width","naturalWidth","height","naturalHeight","handleSave","canvas","document","createElement","ctx","getContext","img","Image","src","drawImage","filter","filteredImageUrl","toDataURL","error","console","handleBrightnessChange","value","handleContrastChange","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","aspect","onImageLoaded","cropSize","onBrightnessChange","onContrastChange","onSave","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport './ImageViewer.css';\nimport SideToolbar from '../SideToolbar/SideToolbar';\nimport Cropper from 'react-easy-crop';\n\nfunction ImageViewer({ image, onClose }) {\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    const [zoom, setZoom] = useState(1);\n    const [imageSrc, setImageSrc] = useState(null);\n    const [imageSize, setImageSize] = useState(null);\n    const [brightness, setBrightness] = useState(0);\n    const [contrast, setContrast] = useState(0);\n    const [filteredImage, setFilteredImage] = useState(null);\n\n    // Load the image when the component mounts\n    useEffect(() => {\n        if (image) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                setImageSrc(reader.result);\n            };\n            reader.readAsDataURL(image);\n        }\n    }, [image]);\n\n    // Handle changes in crop\n    const onCropChange = useCallback((crop) => {\n        setCrop(crop);\n    }, []);\n\n    // Handle changes in zoom\n    const onZoomChange = useCallback((zoom) => {\n        setZoom(zoom);\n    }, []);\n\n    // Handle image load\n    const onImageLoad = useCallback((image) => {\n        setImageSize({ width: image.naturalWidth, height: image.naturalHeight });\n    }, []);\n\n    // Handle save action\n    const handleSave = async () => {\n        try {\n            // Create canvas and draw cropped image\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            const img = new Image();\n            img.src = imageSrc;\n            canvas.width = imageSize.width;\n            canvas.height = imageSize.height;\n            ctx.drawImage(\n                img,\n                crop.x,\n                crop.y,\n                crop.width,\n                crop.height,\n                0,\n                0,\n                imageSize.width,\n                imageSize.height\n            );\n\n            // Apply brightness and contrast filters\n            ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\n\n            // Get filtered image data URL\n            const filteredImageUrl = canvas.toDataURL('image/jpeg');\n            setFilteredImage(filteredImageUrl);\n            onClose(filteredImageUrl);\n        } catch (error) {\n            console.error('Error applying filters:', error);\n        }\n    };\n\n    // Handle brightness change\n    const handleBrightnessChange = (value) => {\n        setBrightness(value);\n        // Call handleSave to apply filters and update the filtered image\n        handleSave();\n    };\n\n    // Handle contrast change\n    const handleContrastChange = (value) => {\n        setContrast(value);\n        // Call handleSave to apply filters and update the filtered image\n        handleSave();\n    };\n\n    return (\n        <div className=\"image-viewer\">\n            <div className=\"controls\">\n                <button onClick={() => setZoom(zoom + 0.1)}>Zoom In</button>\n                <button onClick={() => setZoom(zoom - 0.1)}>Zoom Out</button>\n                <button onClick={onClose}>Close</button>\n            </div>\n            <div className=\"image-container\">\n                {imageSrc && (\n                    <Cropper\n                        image={filteredImage || imageSrc} // Use filtered image if available\n                        crop={crop}\n                        zoom={zoom}\n                        aspect={4 / 3}\n                        onCropChange={onCropChange}\n                        onZoomChange={onZoomChange}\n                        onImageLoaded={onImageLoad}\n                        cropSize={{ width: 400, height: 300 }} // Set the size of the cropper\n                    />\n                )}\n            </div>\n            <SideToolbar\n                onBrightnessChange={handleBrightnessChange}\n                onContrastChange={handleContrastChange}\n                onSave={handleSave}\n            />\n        </div>\n    );\n}\n\nexport default ImageViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC/D,OAAO,mBAAmB;AAC1B,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,OAAO,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,WAAWA,CAAC;EAAEC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACAE,SAAS,CAAC,MAAM;IACZ,IAAIM,KAAK,EAAE;MACP,MAAMmB,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;QAClBX,WAAW,CAACS,MAAM,CAACG,MAAM,CAAC;MAC9B,CAAC;MACDH,MAAM,CAACI,aAAa,CAACvB,KAAK,CAAC;IAC/B;EACJ,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMwB,YAAY,GAAG/B,WAAW,CAAEU,IAAI,IAAK;IACvCC,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMsB,YAAY,GAAGhC,WAAW,CAAEc,IAAI,IAAK;IACvCC,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMmB,WAAW,GAAGjC,WAAW,CAAEO,KAAK,IAAK;IACvCY,YAAY,CAAC;MAAEe,KAAK,EAAE3B,KAAK,CAAC4B,YAAY;MAAEC,MAAM,EAAE7B,KAAK,CAAC8B;IAAc,CAAC,CAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA;MACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/C,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;MACnC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,GAAG,GAAG9B,QAAQ;MAClBuB,MAAM,CAACL,KAAK,GAAGhB,SAAS,CAACgB,KAAK;MAC9BK,MAAM,CAACH,MAAM,GAAGlB,SAAS,CAACkB,MAAM;MAChCM,GAAG,CAACK,SAAS,CACTH,GAAG,EACHlC,IAAI,CAACE,CAAC,EACNF,IAAI,CAACG,CAAC,EACNH,IAAI,CAACwB,KAAK,EACVxB,IAAI,CAAC0B,MAAM,EACX,CAAC,EACD,CAAC,EACDlB,SAAS,CAACgB,KAAK,EACfhB,SAAS,CAACkB,MACd,CAAC;;MAED;MACAM,GAAG,CAACM,MAAM,GAAI,cAAa5B,UAAW,eAAcE,QAAS,IAAG;;MAEhE;MACA,MAAM2B,gBAAgB,GAAGV,MAAM,CAACW,SAAS,CAAC,YAAY,CAAC;MACvDzB,gBAAgB,CAACwB,gBAAgB,CAAC;MAClCzC,OAAO,CAACyC,gBAAgB,CAAC;IAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;;EAED;EACA,MAAME,sBAAsB,GAAIC,KAAK,IAAK;IACtCjC,aAAa,CAACiC,KAAK,CAAC;IACpB;IACAhB,UAAU,CAAC,CAAC;EAChB,CAAC;;EAED;EACA,MAAMiB,oBAAoB,GAAID,KAAK,IAAK;IACpC/B,WAAW,CAAC+B,KAAK,CAAC;IAClB;IACAhB,UAAU,CAAC,CAAC;EAChB,CAAC;EAED,oBACIjC,OAAA;IAAKmD,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBpD,OAAA;MAAKmD,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrBpD,OAAA;QAAQqD,OAAO,EAAEA,CAAA,KAAM3C,OAAO,CAACD,IAAI,GAAG,GAAG,CAAE;QAAA2C,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5DzD,OAAA;QAAQqD,OAAO,EAAEA,CAAA,KAAM3C,OAAO,CAACD,IAAI,GAAG,GAAG,CAAE;QAAA2C,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7DzD,OAAA;QAAQqD,OAAO,EAAElD,OAAQ;QAAAiD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACNzD,OAAA;MAAKmD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC3BzC,QAAQ,iBACLX,OAAA,CAACF,OAAO;QACJI,KAAK,EAAEiB,aAAa,IAAIR,QAAS,CAAC;QAAA;QAClCN,IAAI,EAAEA,IAAK;QACXI,IAAI,EAAEA,IAAK;QACXiD,MAAM,EAAE,CAAC,GAAG,CAAE;QACdhC,YAAY,EAAEA,YAAa;QAC3BC,YAAY,EAAEA,YAAa;QAC3BgC,aAAa,EAAE/B,WAAY;QAC3BgC,QAAQ,EAAE;UAAE/B,KAAK,EAAE,GAAG;UAAEE,MAAM,EAAE;QAAI,CAAE,CAAC;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACNzD,OAAA,CAACH,WAAW;MACRgE,kBAAkB,EAAEb,sBAAuB;MAC3Cc,gBAAgB,EAAEZ,oBAAqB;MACvCa,MAAM,EAAE9B;IAAW;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACrD,EAAA,CA/GQH,WAAW;AAAA+D,EAAA,GAAX/D,WAAW;AAiHpB,eAAeA,WAAW;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}