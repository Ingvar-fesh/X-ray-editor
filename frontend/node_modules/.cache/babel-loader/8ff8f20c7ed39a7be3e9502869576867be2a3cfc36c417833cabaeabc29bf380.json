{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/x-ray-editor/frontend/src/DiagnosisModal/DiagnosisModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './DiagnosisModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DiagnosisModal({\n  onSave,\n  onCancel\n}) {\n  _s();\n  const [diagnosis, setDiagnosis] = useState('');\n  const handleSave = () => {\n    onSave(diagnosis);\n    setDiagnosis('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagnosis-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"diagnosis-textarea\",\n      placeholder: \"Enter diagnosis...\",\n      value: diagnosis,\n      onChange: e => setDiagnosis(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diagnosis-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(DiagnosisModal, \"0MXQcWgv8M746ZZKxz+fyZP9F8U=\");\n_c = DiagnosisModal;\nexport default DiagnosisModal;\nvar _c;\n$RefreshReg$(_c, \"DiagnosisModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DiagnosisModal","onSave","onCancel","_s","diagnosis","setDiagnosis","handleSave","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/x-ray-editor/frontend/src/DiagnosisModal/DiagnosisModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './DiagnosisModal.css';\n\nfunction DiagnosisModal({ onSave, onCancel }) {\n    const [diagnosis, setDiagnosis] = useState('');\n\n    const handleSave = () => {\n        onSave(diagnosis);\n        setDiagnosis('');\n    };\n\n    return (\n        <div className=\"diagnosis-modal\">\n            <textarea\n                className=\"diagnosis-textarea\"\n                placeholder=\"Enter diagnosis...\"\n                value={diagnosis}\n                onChange={(e) => setDiagnosis(e.target.value)}\n            />\n            <div className=\"diagnosis-buttons\">\n                <button onClick={handleSave}>Save</button>\n                <button onClick={onCancel}>Cancel</button>\n            </div>\n        </div>\n    );\n}\n\nexport default DiagnosisModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,cAAcA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrBL,MAAM,CAACG,SAAS,CAAC;IACjBC,YAAY,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,oBACIN,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BT,OAAA;MACIQ,SAAS,EAAC,oBAAoB;MAC9BE,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAEN,SAAU;MACjBO,QAAQ,EAAGC,CAAC,IAAKP,YAAY,CAACO,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFlB,OAAA;MAAKQ,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9BT,OAAA;QAAQmB,OAAO,EAAEZ,UAAW;QAAAE,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1ClB,OAAA;QAAQmB,OAAO,EAAEhB,QAAS;QAAAM,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACd,EAAA,CAtBQH,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAwBvB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}