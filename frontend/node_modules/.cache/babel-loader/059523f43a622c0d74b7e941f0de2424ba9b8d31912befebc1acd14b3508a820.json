{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/xray-editor/src/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport UpToolbar from \"../UpToolbar/UpToolbar\";\nimport ImageEditor from \"../ImageEditor/ImageEditor\";\nimport ImageViewer from \"../ImageViewer/ImageViewer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [selectedImageIndex, setSelectedImageIndex] = useState(null);\n  const handleFilesSelect = files => {\n    setSelectedImages(files);\n    setSelectedImageIndex(null); // Reset selected image index when new images are selected\n  };\n  const handleImageClick = index => {\n    setSelectedImageIndex(index); // Set the selected image index when an image is clicked\n  };\n  const handleCloseViewer = () => {\n    setSelectedImageIndex(null); // Close the ImageViewer by resetting the selected image index\n  };\n  const handleSaveImage = editedImage => {\n    // Update the selectedImages array with the edited image\n    const updatedImages = [...selectedImages];\n    updatedImages[selectedImageIndex] = editedImage;\n    setSelectedImages(updatedImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(UpToolbar, {\n      onFilesSelect: handleFilesSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageEditor, {\n      images: selectedImages,\n      onImageClick: handleImageClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), selectedImageIndex !== null && /*#__PURE__*/_jsxDEV(ImageViewer, {\n      image: selectedImages[selectedImageIndex],\n      onClose: handleCloseViewer,\n      onSave: handleSaveImage // Pass handleSaveImage function as onSave prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"BeJ8+/7mXcNUSGOu0lxNhET9UTc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UpToolbar","ImageEditor","ImageViewer","jsxDEV","_jsxDEV","App","_s","selectedImages","setSelectedImages","selectedImageIndex","setSelectedImageIndex","handleFilesSelect","files","handleImageClick","index","handleCloseViewer","handleSaveImage","editedImage","updatedImages","className","children","onFilesSelect","fileName","_jsxFileName","lineNumber","columnNumber","images","onImageClick","image","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/xray-editor/src/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport UpToolbar from \"../UpToolbar/UpToolbar\";\nimport ImageEditor from \"../ImageEditor/ImageEditor\";\nimport ImageViewer from \"../ImageViewer/ImageViewer\";\n\nfunction App() {\n    const [selectedImages, setSelectedImages] = useState([]);\n    const [selectedImageIndex, setSelectedImageIndex] = useState(null);\n\n    const handleFilesSelect = (files) => {\n        setSelectedImages(files);\n        setSelectedImageIndex(null); // Reset selected image index when new images are selected\n    };\n\n    const handleImageClick = (index) => {\n        setSelectedImageIndex(index); // Set the selected image index when an image is clicked\n    };\n\n    const handleCloseViewer = () => {\n        setSelectedImageIndex(null); // Close the ImageViewer by resetting the selected image index\n    };\n\n    const handleSaveImage = (editedImage) => {\n        // Update the selectedImages array with the edited image\n        const updatedImages = [...selectedImages];\n        updatedImages[selectedImageIndex] = editedImage;\n        setSelectedImages(updatedImages);\n    };\n\n    return (\n        <div className=\"App\">\n            <UpToolbar onFilesSelect={handleFilesSelect} />\n            {/* Pass selectedImages and handleImageClick to ImageEditor */}\n            <ImageEditor images={selectedImages} onImageClick={handleImageClick} />\n            {selectedImageIndex !== null && (\n                <ImageViewer\n                    image={selectedImages[selectedImageIndex]}\n                    onClose={handleCloseViewer}\n                    onSave={handleSaveImage} // Pass handleSaveImage function as onSave prop\n                />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACU,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAMY,iBAAiB,GAAIC,KAAK,IAAK;IACjCJ,iBAAiB,CAACI,KAAK,CAAC;IACxBF,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAMG,gBAAgB,GAAIC,KAAK,IAAK;IAChCJ,qBAAqB,CAACI,KAAK,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5BL,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAMM,eAAe,GAAIC,WAAW,IAAK;IACrC;IACA,MAAMC,aAAa,GAAG,CAAC,GAAGX,cAAc,CAAC;IACzCW,aAAa,CAACT,kBAAkB,CAAC,GAAGQ,WAAW;IAC/CT,iBAAiB,CAACU,aAAa,CAAC;EACpC,CAAC;EAED,oBACId,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBhB,OAAA,CAACJ,SAAS;MAACqB,aAAa,EAAEV;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE/CrB,OAAA,CAACH,WAAW;MAACyB,MAAM,EAAEnB,cAAe;MAACoB,YAAY,EAAEd;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACtEhB,kBAAkB,KAAK,IAAI,iBACxBL,OAAA,CAACF,WAAW;MACR0B,KAAK,EAAErB,cAAc,CAACE,kBAAkB,CAAE;MAC1CoB,OAAO,EAAEd,iBAAkB;MAC3Be,MAAM,EAAEd,eAAgB,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACnB,EAAA,CAtCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}