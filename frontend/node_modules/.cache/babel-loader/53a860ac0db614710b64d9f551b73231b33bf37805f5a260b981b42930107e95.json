{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport './ImageViewer.css';\nimport SideToolbar from '../SideToolbar/SideToolbar';\nimport Cropper from 'react-easy-crop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageViewer({\n  image,\n  onClose,\n  onSave\n}) {\n  _s();\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = useState(1);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [brightness, setBrightness] = useState(100);\n  const [contrast, setContrast] = useState(100);\n\n  // Load the image when the component mounts\n  useEffect(() => {\n    if (image) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImageSrc(reader.result);\n      };\n      reader.readAsDataURL(image);\n    }\n  }, [image]);\n\n  // Handle changes in crop\n  const onCropChange = useCallback(crop => {\n    setCrop(crop);\n  }, []);\n\n  // Handle changes in zoom\n  const onZoomChange = useCallback(zoom => {\n    setZoom(zoom);\n  }, []);\n\n  // Handle brightness change\n  const handleBrightnessChange = value => {\n    setBrightness(value); // Update brightness state\n  };\n\n  // Handle contrast change\n  const handleContrastChange = value => {\n    setContrast(value); // Update contrast state\n  };\n\n  // Handle save action\n  const handleSave = () => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.onload = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\n      ctx.drawImage(img, 0, 0);\n\n      // Convert canvas content to a Blob\n      canvas.toBlob(blob => {\n        const editedImage = new File([blob], 'edited_image.jpeg', {\n          type: 'image/jpeg'\n        });\n        // onSave(editedImage)\n      }, 'image/jpeg', 1);\n    };\n    img.src = imageSrc;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setZoom(zoom + 0.1),\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setZoom(zoom - 0.1),\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      style: {\n        filter: `brightness(${brightness}%) contrast(${contrast}%)`\n      },\n      children: imageSrc && /*#__PURE__*/_jsxDEV(Cropper, {\n        image: imageSrc,\n        crop: crop,\n        zoom: zoom,\n        aspect: 4 / 3,\n        onCropChange: onCropChange,\n        onZoomChange: onZoomChange,\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideToolbar, {\n      onBrightnessChange: handleBrightnessChange,\n      onContrastChange: handleContrastChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageViewer, \"4aA/X3vUfY4gjO4l9yD7L1C4dzY=\");\n_c = ImageViewer;\nexport default ImageViewer;\nvar _c;\n$RefreshReg$(_c, \"ImageViewer\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","SideToolbar","Cropper","jsxDEV","_jsxDEV","ImageViewer","image","onClose","onSave","_s","crop","setCrop","x","y","zoom","setZoom","imageSrc","setImageSrc","brightness","setBrightness","contrast","setContrast","reader","FileReader","onload","result","readAsDataURL","onCropChange","onZoomChange","handleBrightnessChange","value","handleContrastChange","handleSave","canvas","document","createElement","ctx","getContext","img","Image","width","height","filter","drawImage","toBlob","blob","editedImage","File","type","src","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","aspect","onBrightnessChange","onContrastChange","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport './ImageViewer.css';\nimport SideToolbar from '../SideToolbar/SideToolbar';\nimport Cropper from 'react-easy-crop';\n\nfunction ImageViewer({ image, onClose, onSave }) {\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    const [zoom, setZoom] = useState(1);\n    const [imageSrc, setImageSrc] = useState(null);\n    const [brightness, setBrightness] = useState(100);\n    const [contrast, setContrast] = useState(100);\n\n    // Load the image when the component mounts\n    useEffect(() => {\n        if (image) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                setImageSrc(reader.result);\n            };\n            reader.readAsDataURL(image);\n        }\n    }, [image]);\n\n    // Handle changes in crop\n    const onCropChange = useCallback((crop) => {\n        setCrop(crop);\n    }, []);\n\n    // Handle changes in zoom\n    const onZoomChange = useCallback((zoom) => {\n        setZoom(zoom);\n    }, []);\n\n    // Handle brightness change\n    const handleBrightnessChange = (value) => {\n        setBrightness(value); // Update brightness state\n    };\n\n    // Handle contrast change\n    const handleContrastChange = (value) => {\n        setContrast(value); // Update contrast state\n    };\n\n    // Handle save action\n    const handleSave = () => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        const img = new Image();\n\n        img.onload = () => {\n            canvas.width = img.width;\n            canvas.height = img.height;\n\n            ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\n            ctx.drawImage(img, 0, 0);\n\n            // Convert canvas content to a Blob\n            canvas.toBlob(blob => {\n                const editedImage = new File([blob], 'edited_image.jpeg', { type: 'image/jpeg' });\n                // onSave(editedImage)\n            }, 'image/jpeg', 1);\n        };\n\n        img.src = imageSrc;\n    };\n\n    return (\n        <div className=\"image-viewer\">\n            <div className=\"controls\">\n                <button onClick={() => setZoom(zoom + 0.1)}>Zoom In</button>\n                <button onClick={() => setZoom(zoom - 0.1)}>Zoom Out</button>\n                <button onClick={handleSave}>Save</button>\n                <button onClick={onClose}>Close</button>\n            </div>\n            <div className=\"image-container\" style={{ filter: `brightness(${brightness}%) contrast(${contrast}%)` }}>\n                {imageSrc && (\n                    <Cropper\n                        image={imageSrc}\n                        crop={crop}\n                        zoom={zoom}\n                        aspect={4 / 3}\n                        onCropChange={onCropChange}\n                        onZoomChange={onZoomChange}\n                        style={{ width: '100%', height: '100%' }}\n                    />\n                )}\n            </div>\n            <SideToolbar\n                onBrightnessChange={handleBrightnessChange}\n                onContrastChange={handleContrastChange}\n            />\n        </div>\n    );\n}\n\nexport default ImageViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}