{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ImageViewer.css';\nimport SideToolbar from '../SideToolbar/SideToolbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageViewer({\n  image,\n  onClose,\n  onSave\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [context, setContext] = useState(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [brightness, setBrightness] = useState(100);\n  const [contrast, setContrast] = useState(100);\n  const [shapes, setShapes] = useState([]);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(0);\n  const [dragStartY, setDragStartY] = useState(0);\n  const [isResizing, setIsResizing] = useState(false);\n  const [resizeIndex, setResizeIndex] = useState(-1);\n  const [resizeStartX, setResizeStartX] = useState(0);\n  const [resizeStartY, setResizeStartY] = useState(0);\n  useEffect(() => {\n    if (image) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImageSrc(reader.result);\n      };\n      reader.readAsDataURL(image);\n    }\n  }, [image]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    setContext(ctx);\n    if (context && imageSrc) {\n      const img = new Image();\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\n        ctx.drawImage(img, 0, 0);\n        shapes.forEach((shape, index) => {\n          drawShape(ctx, shape, index === selectedShapeIndex, index === resizeIndex);\n        });\n      };\n      img.src = imageSrc;\n    }\n  }, [context, imageSrc, brightness, contrast, shapes, selectedShapeIndex, resizeIndex]);\n\n  // In ImageViewer.jsx\n\n  const drawShape = (ctx, shape, isSelected, isResizing) => {\n    ctx.beginPath();\n    if (shape.type === 'square' || shape.type === 'rectangle') {\n      ctx.rect(shape.x, shape.y, shape.width, shape.height);\n    } else if (shape.type === 'circle') {\n      ctx.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n    }\n    ctx.strokeStyle = isSelected ? 'red' : shape.color;\n    ctx.lineWidth = shape.lineWidth;\n    ctx.stroke();\n    if (isSelected) {\n      const canvasRect = canvasRef.current.getBoundingClientRect();\n      const deleteButtonX = shape.x + shape.width - 15 + canvasRect.left;\n      const deleteButtonY = shape.y - 30 + canvasRect.top;\n      ctx.fillStyle = 'red';\n      ctx.fillRect(deleteButtonX, deleteButtonY, 20, 20);\n    }\n  };\n  const handleDeleteShape = () => {\n    if (selectedShapeIndex !== null) {\n      const newShapes = [...shapes];\n      newShapes.splice(selectedShapeIndex, 1);\n      setShapes(newShapes);\n      setSelectedShapeIndex(null);\n    }\n  };\n  const handleSave = () => {\n    const canvas = canvasRef.current;\n    canvas.toBlob(blob => {\n      onSave(blob);\n    }, 'image/jpeg', 1);\n  };\n  const handleAddShape = type => {\n    const newShapes = [...shapes];\n    if (type === 'square') {\n      newShapes.push({\n        type: 'square',\n        x: 100,\n        y: 100,\n        width: 50,\n        height: 50,\n        color: 'red',\n        lineWidth: 2\n      });\n    } else if (type === 'rectangle') {\n      newShapes.push({\n        type: 'rectangle',\n        x: 200,\n        y: 200,\n        width: 80,\n        height: 40,\n        color: 'blue',\n        lineWidth: 2\n      });\n    } else if (type === 'circle') {\n      newShapes.push({\n        type: 'circle',\n        x: 300,\n        y: 300,\n        radius: 30,\n        color: 'green',\n        lineWidth: 2\n      });\n    }\n    setShapes(newShapes);\n  };\n  const handleMouseDown = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    shapes.forEach((shape, index) => {\n      if (isPointInsideShape(mouseX, mouseY, shape)) {\n        setSelectedShapeIndex(index);\n        setIsDragging(true);\n        setDragStartX(mouseX - shape.x);\n        setDragStartY(mouseY - shape.y);\n        setIsResizing(isResizingHandle(mouseX, mouseY, shape));\n        if (isResizing) {\n          setResizeIndex(index);\n          setResizeStartX(mouseX - shape.x);\n          setResizeStartY(mouseY - shape.y);\n        }\n      }\n    });\n  };\n  const handleMouseMove = e => {\n    if (!isDragging || selectedShapeIndex === null) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    const newShapes = [...shapes];\n    const shape = newShapes[selectedShapeIndex];\n    if (!isResizing) {\n      if (shape.type === 'square' || shape.type === 'rectangle') {\n        shape.x = mouseX - dragStartX;\n        shape.y = mouseY - dragStartY;\n      } else if (shape.type === 'circle') {\n        shape.x = mouseX;\n        shape.y = mouseY;\n      }\n    } else {\n      const dx = mouseX - shape.x - resizeStartX;\n      const dy = mouseY - shape.y - resizeStartY;\n      if (shape.type === 'square' || shape.type === 'rectangle') {\n        shape.width += dx;\n        shape.height += dy;\n      } else if (shape.type === 'circle') {\n        shape.radius += Math.sqrt(dx * dx + dy * dy);\n      }\n      setResizeStartX(mouseX - shape.x);\n      setResizeStartY(mouseY - shape.y);\n    }\n    setShapes(newShapes);\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setIsResizing(false);\n  };\n  const isPointInsideShape = (x, y, shape) => {\n    if (shape.type === 'square' || shape.type === 'rectangle') {\n      return x >= shape.x && x <= shape.x + shape.width && y >= shape.y && y <= shape.y + shape.height;\n    } else if (shape.type === 'circle') {\n      const dx = x - shape.x;\n      const dy = y - shape.y;\n      return dx * dx + dy * dy <= shape.radius * shape.radius;\n    }\n    return false;\n  };\n  const isResizingHandle = (x, y, shape) => {\n    if (shape.type === 'square' || shape.type === 'rectangle') {\n      return x >= shape.x + shape.width - 10 && x <= shape.x + shape.width && y >= shape.y + shape.height - 10 && y <= shape.y + shape.height;\n    } else if (shape.type === 'circle') {\n      const dx = x - shape.x;\n      const dy = y - shape.y;\n      return Math.abs(Math.sqrt(dx * dx + dy * dy) - shape.radius) < 10;\n    }\n    return false;\n  };\n  const handleZoomIn = () => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    const zoomFactor = 1.1;\n    const newShapes = shapes.map(shape => {\n      if (shape.type === 'square' || shape.type === 'rectangle') {\n        shape.x = centerX + (shape.x - centerX) * zoomFactor;\n        shape.y = centerY + (shape.y - centerY) * zoomFactor;\n        shape.width *= zoomFactor;\n        shape.height *= zoomFactor;\n      } else if (shape.type === 'circle') {\n        shape.x = centerX + (shape.x - centerX) * zoomFactor;\n        shape.y = centerY + (shape.y - centerY) * zoomFactor;\n        shape.radius *= zoomFactor;\n      }\n      return shape;\n    });\n    setShapes(newShapes);\n  };\n  const handleZoomOut = () => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    const zoomFactor = 0.9;\n    const newShapes = shapes.map(shape => {\n      if (shape.type === 'square' || shape.type === 'rectangle') {\n        shape.x = centerX + (shape.x - centerX) * zoomFactor;\n        shape.y = centerY + (shape.y - centerY) * zoomFactor;\n        shape.width *= zoomFactor;\n        shape.height *= zoomFactor;\n      } else if (shape.type === 'circle') {\n        shape.x = centerX + (shape.x - centerX) * zoomFactor;\n        shape.y = centerY + (shape.y - centerY) * zoomFactor;\n        shape.radius *= zoomFactor;\n      }\n      return shape;\n    });\n    setShapes(newShapes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomIn,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomOut,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), selectedShapeIndex !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteShape,\n        style: {\n          position: 'absolute',\n          top: shapes[selectedShapeIndex].y - 30,\n          left: shapes[selectedShapeIndex].x + shapes[selectedShapeIndex].width - 15\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideToolbar, {\n      onBrightnessChange: setBrightness,\n      onContrastChange: setContrast,\n      onAddRectangle: () => handleAddShape('rectangle'),\n      onAddCircle: () => handleAddShape('circle')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageViewer, \"V40u11Pq5CWpSyY+MMyr618PY4s=\");\n_c = ImageViewer;\nexport default ImageViewer;\nvar _c;\n$RefreshReg$(_c, \"ImageViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","SideToolbar","jsxDEV","_jsxDEV","ImageViewer","image","onClose","onSave","_s","canvasRef","context","setContext","imageSrc","setImageSrc","brightness","setBrightness","contrast","setContrast","shapes","setShapes","selectedShapeIndex","setSelectedShapeIndex","isDragging","setIsDragging","dragStartX","setDragStartX","dragStartY","setDragStartY","isResizing","setIsResizing","resizeIndex","setResizeIndex","resizeStartX","setResizeStartX","resizeStartY","setResizeStartY","reader","FileReader","onload","result","readAsDataURL","canvas","current","ctx","getContext","img","Image","width","height","filter","drawImage","forEach","shape","index","drawShape","src","isSelected","beginPath","type","rect","x","y","arc","radius","Math","PI","strokeStyle","color","lineWidth","stroke","canvasRect","getBoundingClientRect","deleteButtonX","left","deleteButtonY","top","fillStyle","fillRect","handleDeleteShape","newShapes","splice","handleSave","toBlob","blob","handleAddShape","push","handleMouseDown","e","mouseX","clientX","mouseY","clientY","isPointInsideShape","isResizingHandle","handleMouseMove","dx","dy","sqrt","handleMouseUp","abs","handleZoomIn","centerX","centerY","zoomFactor","map","handleZoomOut","className","children","ref","onMouseDown","onMouseMove","onMouseUp","style","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","position","onBrightnessChange","onContrastChange","onAddRectangle","onAddCircle","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/xray-editor/src/ImageViewer/ImageViewer.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './ImageViewer.css';\nimport SideToolbar from '../SideToolbar/SideToolbar';\n\nfunction ImageViewer({ image, onClose, onSave }) {\n    const canvasRef = useRef(null);\n    const [context, setContext] = useState(null);\n    const [imageSrc, setImageSrc] = useState(null);\n    const [brightness, setBrightness] = useState(100);\n    const [contrast, setContrast] = useState(100);\n    const [shapes, setShapes] = useState([]);\n    const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\n    const [isDragging, setIsDragging] = useState(false);\n    const [dragStartX, setDragStartX] = useState(0);\n    const [dragStartY, setDragStartY] = useState(0);\n    const [isResizing, setIsResizing] = useState(false);\n    const [resizeIndex, setResizeIndex] = useState(-1);\n    const [resizeStartX, setResizeStartX] = useState(0);\n    const [resizeStartY, setResizeStartY] = useState(0);\n\n    useEffect(() => {\n        if (image) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                setImageSrc(reader.result);\n            };\n            reader.readAsDataURL(image);\n        }\n    }, [image]);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        setContext(ctx);\n        if (context && imageSrc) {\n            const img = new Image();\n            img.onload = () => {\n                canvas.width = img.width;\n                canvas.height = img.height;\n                ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;\n                ctx.drawImage(img, 0, 0);\n                shapes.forEach((shape, index) => {\n                    drawShape(ctx, shape, index === selectedShapeIndex, index === resizeIndex);\n                });\n            };\n            img.src = imageSrc;\n        }\n    }, [context, imageSrc, brightness, contrast, shapes, selectedShapeIndex, resizeIndex]);\n\n    // In ImageViewer.jsx\n\n    const drawShape = (ctx, shape, isSelected, isResizing) => {\n        ctx.beginPath();\n        if (shape.type === 'square' || shape.type === 'rectangle') {\n            ctx.rect(shape.x, shape.y, shape.width, shape.height);\n        } else if (shape.type === 'circle') {\n            ctx.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n        }\n        ctx.strokeStyle = isSelected ? 'red' : shape.color;\n        ctx.lineWidth = shape.lineWidth;\n        ctx.stroke();\n        if (isSelected) {\n            const canvasRect = canvasRef.current.getBoundingClientRect();\n            const deleteButtonX = shape.x + shape.width - 15 + canvasRect.left;\n            const deleteButtonY = shape.y - 30 + canvasRect.top;\n            ctx.fillStyle = 'red';\n            ctx.fillRect(deleteButtonX, deleteButtonY, 20, 20);\n        }\n    };\n\n    const handleDeleteShape = () => {\n        if (selectedShapeIndex !== null) {\n            const newShapes = [...shapes];\n            newShapes.splice(selectedShapeIndex, 1);\n            setShapes(newShapes);\n            setSelectedShapeIndex(null);\n        }\n    };\n\n\n\n    const handleSave = () => {\n        const canvas = canvasRef.current;\n        canvas.toBlob(blob => {\n            onSave(blob);\n        }, 'image/jpeg', 1);\n    };\n\n    const handleAddShape = (type) => {\n        const newShapes = [...shapes];\n        if (type === 'square') {\n            newShapes.push({\n                type: 'square',\n                x: 100,\n                y: 100,\n                width: 50,\n                height: 50,\n                color: 'red',\n                lineWidth: 2,\n            });\n        } else if (type === 'rectangle') {\n            newShapes.push({\n                type: 'rectangle',\n                x: 200,\n                y: 200,\n                width: 80,\n                height: 40,\n                color: 'blue',\n                lineWidth: 2,\n            });\n        } else if (type === 'circle') {\n            newShapes.push({\n                type: 'circle',\n                x: 300,\n                y: 300,\n                radius: 30,\n                color: 'green',\n                lineWidth: 2,\n            });\n        }\n        setShapes(newShapes);\n    };\n\n    const handleMouseDown = (e) => {\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        const mouseX = e.clientX - rect.left;\n        const mouseY = e.clientY - rect.top;\n\n        shapes.forEach((shape, index) => {\n            if (isPointInsideShape(mouseX, mouseY, shape)) {\n                setSelectedShapeIndex(index);\n                setIsDragging(true);\n                setDragStartX(mouseX - shape.x);\n                setDragStartY(mouseY - shape.y);\n                setIsResizing(isResizingHandle(mouseX, mouseY, shape));\n                if (isResizing) {\n                    setResizeIndex(index);\n                    setResizeStartX(mouseX - shape.x);\n                    setResizeStartY(mouseY - shape.y);\n                }\n            }\n        });\n    };\n\n    const handleMouseMove = (e) => {\n        if (!isDragging || selectedShapeIndex === null) return;\n\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        const mouseX = e.clientX - rect.left;\n        const mouseY = e.clientY - rect.top;\n\n        const newShapes = [...shapes];\n        const shape = newShapes[selectedShapeIndex];\n        if (!isResizing) {\n            if (shape.type === 'square' || shape.type === 'rectangle') {\n                shape.x = mouseX - dragStartX;\n                shape.y = mouseY - dragStartY;\n            } else if (shape.type === 'circle') {\n                shape.x = mouseX;\n                shape.y = mouseY;\n            }\n        } else {\n            const dx = mouseX - shape.x - resizeStartX;\n            const dy = mouseY - shape.y - resizeStartY;\n            if (shape.type === 'square' || shape.type === 'rectangle') {\n                shape.width += dx;\n                shape.height += dy;\n            } else if (shape.type === 'circle') {\n                shape.radius += Math.sqrt(dx * dx + dy * dy);\n            }\n            setResizeStartX(mouseX - shape.x);\n            setResizeStartY(mouseY - shape.y);\n        }\n        setShapes(newShapes);\n    };\n\n    const handleMouseUp = () => {\n        setIsDragging(false);\n        setIsResizing(false);\n    };\n\n    const isPointInsideShape = (x, y, shape) => {\n        if (shape.type === 'square' || shape.type === 'rectangle') {\n            return x >= shape.x && x <= (shape.x + shape.width) &&\n                y >= shape.y && y <= (shape.y + shape.height);\n        } else if (shape.type === 'circle') {\n            const dx = x - shape.x;\n            const dy = y - shape.y;\n            return dx * dx + dy * dy <= shape.radius * shape.radius;\n        }\n        return false;\n    };\n\n    const isResizingHandle = (x, y, shape) => {\n        if (shape.type === 'square' || shape.type === 'rectangle') {\n            return x >= shape.x + shape.width - 10 && x <= shape.x + shape.width &&\n                y >= shape.y + shape.height - 10 && y <= shape.y + shape.height;\n        } else if (shape.type === 'circle') {\n            const dx = x - shape.x;\n            const dy = y - shape.y;\n            return Math.abs(Math.sqrt(dx * dx + dy * dy) - shape.radius) < 10;\n        }\n        return false;\n    };\n\n    const handleZoomIn = () => {\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        const centerX = rect.width / 2;\n        const centerY = rect.height / 2;\n        const zoomFactor = 1.1;\n        const newShapes = shapes.map(shape => {\n            if (shape.type === 'square' || shape.type === 'rectangle') {\n                shape.x = centerX + (shape.x - centerX) * zoomFactor;\n                shape.y = centerY + (shape.y - centerY) * zoomFactor;\n                shape.width *= zoomFactor;\n                shape.height *= zoomFactor;\n            } else if (shape.type === 'circle') {\n                shape.x = centerX + (shape.x - centerX) * zoomFactor;\n                shape.y = centerY + (shape.y - centerY) * zoomFactor;\n                shape.radius *= zoomFactor;\n            }\n            return shape;\n        });\n        setShapes(newShapes);\n    };\n\n    const handleZoomOut = () => {\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        const centerX = rect.width / 2;\n        const centerY = rect.height / 2;\n        const zoomFactor = 0.9;\n        const newShapes = shapes.map(shape => {\n            if (shape.type === 'square' || shape.type === 'rectangle') {\n                shape.x = centerX + (shape.x - centerX) * zoomFactor;\n                shape.y = centerY + (shape.y - centerY) * zoomFactor;\n                shape.width *= zoomFactor;\n                shape.height *= zoomFactor;\n            } else if (shape.type === 'circle') {\n                shape.x = centerX + (shape.x - centerX) * zoomFactor;\n                shape.y = centerY + (shape.y - centerY) * zoomFactor;\n                shape.radius *= zoomFactor;\n            }\n            return shape;\n        });\n        setShapes(newShapes);\n    };\n\n    return (\n        <div className=\"image-viewer\">\n            <canvas\n                ref={canvasRef}\n                onMouseDown={handleMouseDown}\n                onMouseMove={handleMouseMove}\n                onMouseUp={handleMouseUp}\n                style={{border: '1px solid black'}}\n            />\n            <div className=\"controls\">\n                <button onClick={handleZoomIn}>Zoom In</button>\n                <button onClick={handleZoomOut}>Zoom Out</button>\n                <button onClick={handleSave}>Save</button>\n                <button onClick={onClose}>Close</button>\n                {selectedShapeIndex !== null && (\n                    <button onClick={handleDeleteShape} style={{\n                        position: 'absolute',\n                        top: shapes[selectedShapeIndex].y - 30,\n                        left: shapes[selectedShapeIndex].x + shapes[selectedShapeIndex].width - 15\n                    }}>X</button>\n                )}\n            </div>\n\n            <SideToolbar\n                onBrightnessChange={setBrightness}\n                onContrastChange={setContrast}\n                onAddRectangle={() => handleAddShape('rectangle')}\n                onAddCircle={() => handleAddShape('circle')}\n            />\n        </div>\n    );\n}\n\nexport default ImageViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}