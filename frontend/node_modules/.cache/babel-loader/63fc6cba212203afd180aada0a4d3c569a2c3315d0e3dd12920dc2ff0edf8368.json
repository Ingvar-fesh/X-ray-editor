{"ast":null,"code":"var _jsxFileName = \"/Users/igorfesenko/Desktop/x-ray-editor/frontend/src/DiagnosisModal/DiagnosisModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './DiagnosisModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DiagnosisModal({\n  initialDiagnosis,\n  onSave,\n  onCancel\n}) {\n  _s();\n  const [diagnosis, setDiagnosis] = useState(initialDiagnosis);\n  useEffect(() => {\n    setDiagnosis(initialDiagnosis);\n  }, [initialDiagnosis]);\n  const handleSave = () => {\n    onSave(diagnosis);\n    setDiagnosis('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagnosis-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal-title\",\n        children: \"Write Diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"diagnosis-textarea\",\n        placeholder: \"Enter diagnosis...\",\n        value: diagnosis,\n        onChange: e => setDiagnosis(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(DiagnosisModal, \"1CpWcHkq3dPEvA1YmrvDQs0er2E=\");\n_c = DiagnosisModal;\nexport default DiagnosisModal;\nvar _c;\n$RefreshReg$(_c, \"DiagnosisModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DiagnosisModal","initialDiagnosis","onSave","onCancel","_s","diagnosis","setDiagnosis","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/igorfesenko/Desktop/x-ray-editor/frontend/src/DiagnosisModal/DiagnosisModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './DiagnosisModal.css';\n\nfunction DiagnosisModal({ initialDiagnosis, onSave, onCancel }) {\n    const [diagnosis, setDiagnosis] = useState(initialDiagnosis);\n\n    useEffect(() => {\n        setDiagnosis(initialDiagnosis);\n    }, [initialDiagnosis]);\n\n    const handleSave = () => {\n        onSave(diagnosis);\n        setDiagnosis('');\n    };\n\n    return (\n        <div className=\"diagnosis-modal\">\n            <div className=\"modal-content\">\n                <h2 className=\"modal-title\">Write Diagnosis</h2>\n                <textarea\n                    className=\"diagnosis-textarea\"\n                    placeholder=\"Enter diagnosis...\"\n                    value={diagnosis}\n                    onChange={(e) => setDiagnosis(e.target.value)}\n                />\n                <div className=\"modal-buttons\">\n                    <button className=\"save-button\" onClick={handleSave}>Save</button>\n                    <button className=\"cancel-button\" onClick={onCancel}>Cancel</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default DiagnosisModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,cAAcA,CAAC;EAAEC,gBAAgB;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAACK,gBAAgB,CAAC;EAE5DJ,SAAS,CAAC,MAAM;IACZS,YAAY,CAACL,gBAAgB,CAAC;EAClC,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtB,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACrBL,MAAM,CAACG,SAAS,CAAC;IACjBC,YAAY,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,oBACIP,OAAA;IAAKS,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5BV,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BV,OAAA;QAAIS,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDd,OAAA;QACIS,SAAS,EAAC,oBAAoB;QAC9BM,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAEV,SAAU;QACjBW,QAAQ,EAAGC,CAAC,IAAKX,YAAY,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACFd,OAAA;QAAKS,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1BV,OAAA;UAAQS,SAAS,EAAC,aAAa;UAACW,OAAO,EAAEZ,UAAW;UAAAE,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClEd,OAAA;UAAQS,SAAS,EAAC,eAAe;UAACW,OAAO,EAAEhB,QAAS;UAAAM,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACT,EAAA,CA7BQJ,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AA+BvB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}